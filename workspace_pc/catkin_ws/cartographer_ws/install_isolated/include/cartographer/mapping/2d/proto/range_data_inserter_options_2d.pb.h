// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cartographer/mapping/2d/proto/range_data_inserter_options_2d.proto

#ifndef PROTOBUF_cartographer_2fmapping_2f2d_2fproto_2frange_5fdata_5finserter_5foptions_5f2d_2eproto__INCLUDED
#define PROTOBUF_cartographer_2fmapping_2f2d_2fproto_2frange_5fdata_5finserter_5foptions_5f2d_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace cartographer {
namespace mapping {
namespace proto {
class RangeDataInserterOptions2D;
class RangeDataInserterOptions2DDefaultTypeInternal;
extern RangeDataInserterOptions2DDefaultTypeInternal _RangeDataInserterOptions2D_default_instance_;
}  // namespace proto
}  // namespace mapping
}  // namespace cartographer

namespace cartographer {
namespace mapping {
namespace proto {

namespace protobuf_cartographer_2fmapping_2f2d_2fproto_2frange_5fdata_5finserter_5foptions_5f2d_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cartographer_2fmapping_2f2d_2fproto_2frange_5fdata_5finserter_5foptions_5f2d_2eproto

// ===================================================================

class RangeDataInserterOptions2D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cartographer.mapping.proto.RangeDataInserterOptions2D) */ {
 public:
  RangeDataInserterOptions2D();
  virtual ~RangeDataInserterOptions2D();

  RangeDataInserterOptions2D(const RangeDataInserterOptions2D& from);

  inline RangeDataInserterOptions2D& operator=(const RangeDataInserterOptions2D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RangeDataInserterOptions2D(RangeDataInserterOptions2D&& from) noexcept
    : RangeDataInserterOptions2D() {
    *this = ::std::move(from);
  }

  inline RangeDataInserterOptions2D& operator=(RangeDataInserterOptions2D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RangeDataInserterOptions2D& default_instance();

  static inline const RangeDataInserterOptions2D* internal_default_instance() {
    return reinterpret_cast<const RangeDataInserterOptions2D*>(
               &_RangeDataInserterOptions2D_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RangeDataInserterOptions2D* other);
  friend void swap(RangeDataInserterOptions2D& a, RangeDataInserterOptions2D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RangeDataInserterOptions2D* New() const PROTOBUF_FINAL { return New(NULL); }

  RangeDataInserterOptions2D* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RangeDataInserterOptions2D& from);
  void MergeFrom(const RangeDataInserterOptions2D& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RangeDataInserterOptions2D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double hit_probability = 1;
  void clear_hit_probability();
  static const int kHitProbabilityFieldNumber = 1;
  double hit_probability() const;
  void set_hit_probability(double value);

  // double miss_probability = 2;
  void clear_miss_probability();
  static const int kMissProbabilityFieldNumber = 2;
  double miss_probability() const;
  void set_miss_probability(double value);

  // bool insert_free_space = 3;
  void clear_insert_free_space();
  static const int kInsertFreeSpaceFieldNumber = 3;
  bool insert_free_space() const;
  void set_insert_free_space(bool value);

  // @@protoc_insertion_point(class_scope:cartographer.mapping.proto.RangeDataInserterOptions2D)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double hit_probability_;
  double miss_probability_;
  bool insert_free_space_;
  mutable int _cached_size_;
  friend struct protobuf_cartographer_2fmapping_2f2d_2fproto_2frange_5fdata_5finserter_5foptions_5f2d_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RangeDataInserterOptions2D

// double hit_probability = 1;
inline void RangeDataInserterOptions2D::clear_hit_probability() {
  hit_probability_ = 0;
}
inline double RangeDataInserterOptions2D::hit_probability() const {
  // @@protoc_insertion_point(field_get:cartographer.mapping.proto.RangeDataInserterOptions2D.hit_probability)
  return hit_probability_;
}
inline void RangeDataInserterOptions2D::set_hit_probability(double value) {
  
  hit_probability_ = value;
  // @@protoc_insertion_point(field_set:cartographer.mapping.proto.RangeDataInserterOptions2D.hit_probability)
}

// double miss_probability = 2;
inline void RangeDataInserterOptions2D::clear_miss_probability() {
  miss_probability_ = 0;
}
inline double RangeDataInserterOptions2D::miss_probability() const {
  // @@protoc_insertion_point(field_get:cartographer.mapping.proto.RangeDataInserterOptions2D.miss_probability)
  return miss_probability_;
}
inline void RangeDataInserterOptions2D::set_miss_probability(double value) {
  
  miss_probability_ = value;
  // @@protoc_insertion_point(field_set:cartographer.mapping.proto.RangeDataInserterOptions2D.miss_probability)
}

// bool insert_free_space = 3;
inline void RangeDataInserterOptions2D::clear_insert_free_space() {
  insert_free_space_ = false;
}
inline bool RangeDataInserterOptions2D::insert_free_space() const {
  // @@protoc_insertion_point(field_get:cartographer.mapping.proto.RangeDataInserterOptions2D.insert_free_space)
  return insert_free_space_;
}
inline void RangeDataInserterOptions2D::set_insert_free_space(bool value) {
  
  insert_free_space_ = value;
  // @@protoc_insertion_point(field_set:cartographer.mapping.proto.RangeDataInserterOptions2D.insert_free_space)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace proto
}  // namespace mapping
}  // namespace cartographer

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cartographer_2fmapping_2f2d_2fproto_2frange_5fdata_5finserter_5foptions_5f2d_2eproto__INCLUDED
